#LOG INTO CONSOLE

# Set to debug or trace if log4j initialization is failing
status = info

# Name of the configuration
name = ConsoleLogConfig

# Console appender configuration
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{YYYY-MM-DD HH:mm:ss} %-5p %c{1}:%L - %m%n
# Root logger console and file aside
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = info

# Root logger level console stand alone
#rootLogger.level = warn

# Root logger referring to console appender
rootLogger.appenderRef.stdout.ref = consoleLogger

##################################################################################################
##LOG INTO A FILE

status = info
name= RollingFileLogConfig

## Log files location
#property.basePath = in case I need the variable( = ${basePath}/ )

## RollingFileAppender name, pattern, path and roll over policy
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName= safetyNetApi.log
appender.rolling.filePattern= ${basePath}/app_%d{yyyyMMdd}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{YYYY-MM-DD HH:mm:ss.SSS} %level [%t] [%l] - %msg%n
appender.rolling.policies.type = Policies

## RollingFileAppender rotation policy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 10
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

## Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Configure root logger
rootLogger.level = info
rootLogger.appenderRef.rolling.ref = fileLogger